package task_2;

public class GameMethods {
	

	public static void drawGame(String[][] pattern) {
		 for(int i =0; i < 6; i++) {
				
			 for(int  j = 0; j < 7; j++) 
			 {
				System.out.print("|");
				System.out.print(pattern[i][j] == null ? " " : pattern[i][j]);
				
			 }
			 System.out.println("|");
		 }
		
	}
	
	public static void pushLetter(int pos, String letter, String[][] pattern) {
		
		 for(int i = 5; i > 0; i--) {
				
				 if(pattern[i][pos]==null) {
					 pattern[i][pos]=letter;
					 break;
				 } 
			 
			 }
		
	}
	
	
	public static boolean gameWinner(String[][] pattern) {
		
		 for (int i =0;i<6;i++)
		    {
		       for (int j=0;j<7;j++)
		      {
		        if ((pattern[i][j] != null) && (pattern[i][j+1] != null) && (pattern[i][j+2] != null)&& (pattern[i][j+3] != null)){
		        		if((pattern[i][j] == pattern[i][j+1])
		        		        && (pattern[i][j+1] == pattern[i][j+2])
		        		        && (pattern[i][j+2] == pattern[i][j+3])){
		        			
		        			System.out.println("The winner is: " + pattern[i][j+2]);
		        			 return true;	 
		        		}
		        }
		      }
		    }
		
		    for (int i=0;i<6;i++)
		    {
		      
		      for (int j =0;j<3;j++)
		      {
		            if((pattern[j][i] != null)&& (pattern[j+1][i] != null)&& (pattern[j+2][i] != null)&& (pattern[j+3][i] != null)
		            && ((pattern[j][i] == pattern[j+1][i])
		            && (pattern[j+1][i] == pattern[j+2][i])
		            && (pattern[j+2][i] == pattern[j+3][i])))
		              return true;  
		      }  
		    }
//		    
//		    //checking for left-up to right down diagonal line
//		    
//		    for (int i=0;i<3;i++)
//		    {
//		      for (int j=1;j<9;j+=2)
//		      {
//		            if((pattern[i][j] != " ") && (pattern[i+1][j+2] != " ")&& (pattern[i+2][j+4] != " ")&& (pattern[i+3][j+6] != " ")
//		            && ((pattern[i][j] == pattern[i+1][j+2])
//		            && (pattern[i+1][j+2] == pattern[i+2][j+4])
//		            && (pattern[i+2][j+4] == pattern[i+3][j+6])))
//		              return true;  
//		      }  
//		    }
//		    
//		   // checking for right up to left down diagonal line
//		    for (int i=0;i<3;i++)
//		    {
//		      for (int j=7;j<15;j+=2)
//		      {
//		            if((pattern[i][j] != " ")&& (pattern[i+1][j-2] != " ")&& (pattern[i+2][j-4] != " ")&& (pattern[i+3][j-6] != " ")
//		            && ((pattern[i][j] == pattern[i+1][j-2])
//		            && (pattern[i+1][j-2] == pattern[i+2][j-4])
//		            && (pattern[i+2][j-4] == pattern[i+3][j-6])))
//		              return true;  
//		      }  
		   // }
		     return false; // returning null if winner is not found
		  
		
	}
}
