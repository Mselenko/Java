package client;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;

public class Client extends Application {
	// IO streams
	private DataOutputStream output;
	private DataInputStream input;
	private Socket socket = null;
	String serverMessage = "";
	TextArea ta = new TextArea();

	@Override // Override the start method in the Application class
	public void start(Stage primaryStage) {
// Panel p to hold the label and text field
		BorderPane paneForTextField = new BorderPane();
		Button btnSend = new Button("|>");
		paneForTextField.setPadding(new Insets(5, 5, 5, 5));
		paneForTextField.setStyle("-fx-border-color: green");
		paneForTextField.setRight(btnSend);

		TextField tf = new TextField();
		tf.setAlignment(Pos.BOTTOM_RIGHT);
		paneForTextField.setCenter(tf);

		BorderPane mainPane = new BorderPane();
//Text area to display contents

		mainPane.setTop(new ScrollPane(ta));
		mainPane.setCenter(paneForTextField);

		Scene scene = new Scene(mainPane, 450, 270);
		primaryStage.setTitle("Client"); // Set the stage title
		primaryStage.setScene(scene); // Place the scene in the stage
		primaryStage.show(); // Display the stage

		btnSend.setOnAction(e -> {
			try {

				output.writeUTF(tf.getText() + "\n");
				output.flush();

			} catch (IOException ex) {
				ex.printStackTrace();
			}
		});

		try {

			socket = new Socket("127.0.0.1", 5000);

			input = new DataInputStream(socket.getInputStream());
			output = new DataOutputStream(socket.getOutputStream());

			new Thread(() -> {
				try {
					while (true) {
						
						System.out.println("Waiting for message");
						
						serverMessage = input.readUTF();

						System.out.println(serverMessage);

						Platform.runLater(() -> {

							ta.appendText(serverMessage);

						});
					}
				} catch (IOException e) {
					ta.appendText(e.toString() + "\n");
				}

			}).start();
		} catch (IOException ex) {
			ta.appendText(ex.toString() + '\n');
		}
	}

	public static void main(String[] args) {
		launch(args);
	}

	public void showMessage(String message) {

		Platform.runLater(() -> {
			ta.appendText(message);

		});
	}

}
